{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/ReservationForm/ReservationForm.js","times.js","clientStorage.js","components/Reservation/Reservation.js","components/ClientInfo/ClientInfo.js","components/ReservationList/ReservationList.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","Home","ReservationForm","props","reservationDay","reservationTime","onFormSubmit","onInputChange","onSubmit","htmlFor","type","name","onChange","value","times","start","end","getClients","clients","JSON","parse","localStorage","getItem","setItem","stringify","addClient","client","push","removeClient","id","newClients","filter","console","log","Reservation","state","date","Date","selectedTime","user","phone","selectedDay","todayClients","reservationTimes","todayReservationTimes","toLocaleString","year","month","day","clientStorage","newReservationTimes","clientTimes","time","includes","_this","setState","e","Object","defineProperty","target","onSelectChange","_this$state","preventDefault","uuid","newTimes","this","_this$state2","selectOptions","map","i","key","concat","toLocaleDateString","entry_default","minDate","now","locale","components_ReservationForm_ReservationForm","Component","ClientInfo","undefined","clientInfo","onClick","ReservationList","clientInput","activeContent","onButtonClick","removeReservation","_this2","clientsList","toLowerCase","components_ClientInfo_ClientInfo","searchOptions","App","BrowserRouter","components_Header_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24ead68c.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './Header.scss';\n\nconst Header = () => {\n  return (\n    <div className='Header'>\n      <Link to='/'><h1>Kirpejas.com</h1></Link>\n      <nav>\n        <Link to='/reservation'>Rezervacija</Link>\n        <Link to='/reservation-list'>Klient≈≥ rezervacijos</Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport './Home.scss'\n\nconst Home = () => {\n  return (\n    <div>\n      <h2>Sveiki atvykƒô ƒØ Kirpyklos \"Kirpƒójas.com\" registracijos sistemƒÖ</h2>\n      <p>Norƒódami rezervuoti sau laikƒÖ, vir≈°uje paspauskitƒó Rezervacija.</p>\n      <p>Kirpƒójos, norinƒçios pamatyti rezervacijos sƒÖra≈°ƒÖ, spaud≈æia \"Klient≈≥ rezervacijos\" vir≈°uje</p>\n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport './ReservationForm.scss';\n\nconst ReservationForm = (props) => {\n    const { reservationDay,reservationTime, onFormSubmit, onInputChange } = props;\n    return (\n      <form onSubmit={onFormSubmit}>\n        <h3>J≈´s≈≥ pasirinktas laikas yra:</h3>\n        <p>{reservationDay} {reservationTime}</p>\n        <label htmlFor=\"user\">J≈´s≈≥ Vardas Pavardƒó</label>\n        <input type=\"text\" name=\"user\" onChange={onInputChange}/>\n        <label htmlFor=\"phone\">J≈´s≈≥ telefonas</label>\n        <input type=\"text\" name=\"phone\" onChange={onInputChange}/>\n        <input type=\"submit\" value=\"Rezervuotis\"/>\n      </form>\n    );\n}\n\nexport default ReservationForm;","export default [\n  {start: '10:00', end: '10:15'},\n  {start: '10:15', end: '10:30'},\n  {start: '10:30', end: '10:45'},\n  {start: '10:45', end: '11:00'},\n  {start: '11:00', end: '11:15'},\n  {start: '11:15', end: '11:30'},\n  {start: '11:30', end: '11:45'},\n  {start: '11:45', end: '12:00'},\n  {start: '12:00', end: '12:15'},\n  {start: '12:15', end: '12:30'},\n  {start: '12:30', end: '12:45'},\n  {start: '12:45', end: '13:00'},\n  {start: '13:00', end: '13:15'},\n  {start: '13:15', end: '13:30'},\n  {start: '13:30', end: '13:45'},\n  {start: '13:45', end: '14:00'},\n  {start: '14:00', end: '14:15'},\n  {start: '14:15', end: '14:30'},\n  {start: '14:30', end: '14:45'},\n  {start: '14:45', end: '15:00'},\n  {start: '15:00', end: '15:15'},\n  {start: '15:15', end: '15:30'},\n  {start: '15:30', end: '15:45'},\n  {start: '15:45', end: '16:00'},\n  {start: '16:00', end: '16:15'},\n  {start: '16:15', end: '16:30'},\n  {start: '16:30', end: '16:45'},\n  {start: '16:45', end: '17:00'},\n  {start: '17:00', end: '17:15'},\n  {start: '17:15', end: '17:30'},\n  {start: '17:30', end: '17:45'},\n  {start: '17:45', end: '18:00'},\n  {start: '18:00', end: '18:15'},\n  {start: '18:15', end: '18:30'},\n  {start: '18:30', end: '18:45'},\n  {start: '18:45', end: '19:00'},\n  {start: '19:00', end: '19:15'},\n  {start: '19:15', end: '19:30'},\n  {start: '19:30', end: '19:45'},\n  {start: '19:45', end: '20:00'},\n  {start: '20:00', end: '20:15'},\n  {start: '20:15', end: '20:30'},\n  {start: '20:30', end: '20:45'},\n  {start: '20:45', end: '21:00'},\n  {start: '21:00', end: '21:15'},\n  {start: '21:15', end: '21:30'},\n  {start: '21:30', end: '21:45'},\n  {start: '21:45', end: '22:00'}\n]","export const getClients = () => {\n  let clients = JSON.parse(localStorage.getItem('BarberShop-clients-mpetkevic'));\n  if (clients === null) {\n    localStorage.setItem('BarberShop-clients-mpetkevic', JSON.stringify([]))\n  }\n  return clients;\n}\n\nexport const addClient = (client) => {\n  let clients = JSON.parse(localStorage.getItem('BarberShop-clients-mpetkevic'));\n  clients.push(client);\n  localStorage.setItem('BarberShop-clients-mpetkevic', JSON.stringify(clients))\n}\n\nexport const removeClient = (id) => {\n\n  let clients = JSON.parse(localStorage.getItem('BarberShop-clients-mpetkevic'));\n  const newClients = clients.filter(client => {\n    return client.id !== id\n  })\n  localStorage.setItem('BarberShop-clients-mpetkevic', JSON.stringify(newClients))\n  console.log(newClients)\n}","import React, {Component} from 'react';\nimport Calendar from 'react-calendar';\nimport ReservationForm from '../ReservationForm/ReservationForm';\nimport './Reservation.scss';\nimport clientTimes from '../../times';\nimport * as clientStorage from '../../clientStorage';\nimport uuid from 'uuid/v4';\n\n\n\nclass Reservation extends Component {\n  state = {\n    date: new Date(),\n    selectedTime: 'times',\n    user: '',\n    phone: '',\n    selectedDay: '',\n    clients: '',\n    todayClients: '',\n    reservationTimes: [],\n    todayReservationTimes: []\n  }\n\n  componentDidMount() {\n    const selectedDay = this.state.date.toLocaleString('lt-LT', { year: 'numeric', month: 'numeric', day: 'numeric' });\n    const clients = clientStorage.getClients();\n    const newClients = clients.filter(client => {\n      if(client.selectedDay === selectedDay) {\n        return client.selectedTime;\n      }\n    });\n    console.log(newClients);\n    const newReservationTimes = clientTimes.filter(time => {\n      let newClientsJSON = JSON.stringify(newClients)\n      return !newClientsJSON.includes(time.start);\n    });\n    // console.log(newReservationTimes)\n    this.setState({\n      todayClients: newClients,\n      selectedDay,\n      todayReservationTimes: newReservationTimes\n    })\n  }\n\n  onChange = date => {\n    const selectedDay = date.toLocaleString('lt-LT', { year: 'numeric', month: 'numeric', day: 'numeric' });\n    const clients = clientStorage.getClients();\n    const newClients = clients.filter(client => {\n      if (client.selectedDay === selectedDay) {\n        return client;\n      }\n    });\n    const newReservationTimes = clientTimes.filter(time => {\n      let newClientsJSON = JSON.stringify(newClients);\n      return !newClientsJSON.includes(time.start);\n    });\n    this.setState({\n      date,\n      todayReservationTimes: newReservationTimes,\n      todayClients: newClients,\n      selectedDay\n    });\n  };\n\n  onInputChange = e => this.setState({[e.target.name]: e.target.value})\n\n  onSelectChange = e => this.setState({selectedTime: e.target.value})\n\n  onFormSubmit = e => {\n    const { selectedTime, selectedDay, user, phone, todayClients, todayReservationTimes } = this.state\n    e.preventDefault();\n    const id = uuid();\n    const client = {\n      selectedDay,\n      selectedTime,\n      user,\n      phone,\n      id\n    }\n    console.log(client)\n    clientStorage.addClient(client);\n    todayClients.push(client);\n    const newTimes = todayReservationTimes.filter(time => {\n      return time.start !== selectedTime;\n    });\n    console.log(newTimes)\n    this.setState({\n      selectedTime: 'times',\n      todayClients,\n      todayReservationTimes: newTimes\n    })\n  }\n\n  render() {\n    const { selectedTime, selectedDay, date, todayReservationTimes } = this.state;\n    const dateOptions = { year: 'numeric', month: 'long', day: 'numeric' };\n    const selectOptions = todayReservationTimes.map((time, i) => {\n      return <option\n        key={i}\n        value={time.start}\n        >\n        {`${selectedDay} ${time.start}-${time.end}`}\n      </option>\n    })\n    return (\n      <div>\n        <p>Norƒódami u≈æsiregistruoti, pasirinkite ≈æemiau esanƒçiame kalendoriuje datƒÖ, tada ≈æemiau esanƒçiame, pasirinkime,\n        i≈°rinkite, tinkamƒÖ laikƒÖ, bei pasiruod≈æiusioje formoje, u≈æpildykite, kontaktinius duomenis.</p>\n        <p>{date.toLocaleDateString('lt-LT', dateOptions)}</p>\n        <p>Rinkitƒós apsilankymo datƒÖ:</p>\n        <Calendar\n          minDate={new Date(Date.now())}\n          onChange={this.onChange}\n          value={date}\n          locale=\"lt-LT\"\n        />\n        {selectedDay !== '' ? <div>\n          <p>Rinkitƒós apsilankymo laikƒÖ:</p>\n          <select\n            className='react-select'\n            value={selectedTime}\n            onChange={this.onSelectChange}\n          >\n            <option value='times'>Laikai:</option>\n            {selectOptions}\n          </select>\n          {selectedTime !== 'times'  ?\n            <ReservationForm\n              reservationDay={selectedDay}\n              reservationTime={selectedTime}\n              onFormSubmit={this.onFormSubmit}\n              onInputChange={this.onInputChange}\n            /> : null}\n        </div> : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default Reservation;","import React from 'react';\nimport './ClientInfo.scss';\n\nconst ClientInfo = (props) => {\n  return (\n      props.clientInfo !== undefined ?\n        <div className='client'>\n          <span>\n            <span className='bold'>Klientas: </span> {props.clientInfo.user},\n            <span className='bold'>Telefonas: </span> {props.clientInfo.phone},\n            <span className='bold'>Pasirinktas laikas: </span>{props.clientInfo.selectedDay} {props.clientInfo.selectedTime}\n          </span>\n          <span\n            className=\"delete\" onClick={(e) => props.removeClient(e,props.clientInfo.id)}\n          >At≈°aukti</span>\n        </div> : null\n\n  );\n};\n\nexport default ClientInfo;","import React, {Component} from 'react';\nimport Calendar from 'react-calendar';\nimport ClientInfo from '../ClientInfo/ClientInfo';\nimport * as clientStorage from '../../clientStorage';\nimport './ReservationList.scss';\n\nclass ReservationList extends Component {\n  state = {\n    date: new Date(),\n    selectedDay: '',\n    clients: [],\n    clientInput: '',\n    activeContent: 2\n  }\n\n  componentDidMount() {\n    const selectedDay = this.state.date.toLocaleString('lt-LT', { year: 'numeric', month: 'numeric', day: 'numeric' });\n    this.setState({\n      clients: clientStorage.getClients(),\n      selectedDay\n    })\n  }\n\n  onChange = date => {\n    const selectedDay = date.toLocaleString('lt-LT', { year: 'numeric', month: 'numeric', day: 'numeric' });\n    const clients = clientStorage.getClients().filter(client => {\n      return client.selectedDay === selectedDay\n    })\n    this.setState({ date,  selectedDay, clients});\n  };\n\n  onInputChange = e => this.setState({[e.target.name]: e.target.value})\n\n  onButtonClick = activeContent => this.setState({\n    activeContent,\n    clients: clientStorage.getClients(),\n    clientInput: '',\n  })\n\n  removeReservation = (e, id) => {\n    e.preventDefault();\n    clientStorage.removeClient(id);\n    const clients = this.state.clients;\n    const newClients = clients.filter(client => {\n      return client.id !== id\n    })\n    this.setState({clients: newClients})\n  }\n\n  render () {\n    const {clients, clientInput, activeContent } = this.state;\n    console.log(clients)\n    const clientsList = clients && clients.filter((client) => {\n        if(client.user.toLowerCase().includes(clientInput.toLowerCase())){\n          return client;\n        }\n        return;\n      }).map((client) => <ClientInfo key={client.id} clientInfo={client} removeClient={this.removeReservation}/>)\n    const searchOptions = [\n      <Calendar\n        minDate={new Date(Date.now())}\n        onChange={this.onChange}\n        value={this.state.date}\n        locale=\"lt-LT\"\n      />,\n      <div className='searchByName'>\n        <label htmlFor=\"clientInput\">ƒÆveskite kliento VardƒÖ Pavardƒô:{'    '}</label>\n        <input type=\"text\" name=\"clientInput\" onChange={this.onInputChange}/>\n      </div>, null\n\n    ]\n    return (\n      <div className='reservationList'>\n        <p>Kirpƒójos, norinƒçios pasi≈æi≈´rƒóti, klient≈≥ sƒÖra≈°ƒÖ, pagal datƒÖ, spaud≈æia mygtukƒÖ \"Pagal datƒÖ\".</p>\n        <p>Kirpƒójos, norinƒçios surasti klientƒÖ, pagal vardƒÖ, pavardƒô, spaud≈æia mygtukƒÖ \"Pagal VardƒÖ Pavardƒô\".\n        Atsiradusiame laukelyje, ra≈°ant vardƒÖ, pavardƒô, automati≈°kai vyksta filtracija.</p>\n        <p>Kirpƒójos, norinƒçios matyti visƒÖ klient≈≥ sƒÖra≈°ƒÖ, spaud≈æia mygtukƒÖ \"Rodyti visas rezervacijas\".</p>\n        <p>Kirpƒójos, norinƒçios at≈°aukti, tam tikrƒÖ rezervacija, spaud≈æia mygtukƒÖ \"At≈°aukti\", esantƒØ rezervacijoje.</p>\n        <div className=\"search-options\">\n          <button\n            onClick={() => this.onButtonClick(0)}\n            className={activeContent === 0 ? 'active' : null}\n          >Pagal datƒÖ</button>\n          <button\n            onClick={() => this.onButtonClick(1)}\n            className={activeContent === 1 ? 'active' : null}\n          >Pagal VardƒÖ Pavardƒô</button>\n          <button\n            onClick={() => this.onButtonClick(2)}\n            className={activeContent === 2 ? 'active' : null}\n          >Rodyti visas rezervacijas</button>\n\n        </div>\n\n        {searchOptions[this.state.activeContent]}\n\n\n        <h2>Klient≈≥ rezervacijos</h2>\n        {clientsList}\n      </div>\n    );\n  }\n};\n\nexport default ReservationList;","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './main.scss';\n\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport Reservation from './components/Reservation/Reservation';\nimport ReservationList from './components/ReservationList/ReservationList';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Header/>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/reservation' component={Reservation}/>\n            <Route exact path='/reservation-list' component={ReservationList}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}